generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  email    String? @unique
  name     String?
  number   String  @unique
  password String
   OnRampTransaction OnRampTransaction[]
  Balance           Balance[]
  sentTransfers     p2pTransactions[]       @relation(name: "FromUserRelation")
  receivedTransfers p2pTransactions[]       @relation(name: "ToUserRelation")
}

model Merchant {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  auth_type AuthType
}

model OnRampTransaction {
  id        String       @id @default(uuid())
  status    OnRampStatus
  token     String       @unique
  provider  String
  type      OnRampType
  amount    Int
  startTime DateTime
  userId    String
  user      User         @relation(fields: [userId], references: [id])
}

model Balance {
  id     String @id @default(uuid())
  userId String @unique
  amount Int
  locked Int
  user   User   @relation(fields: [userId], references: [id])
}

model p2pTransactions {
  id         String          @id @default(uuid())
  amount     Int
  timestamp  DateTime
  fromUserId String
  fromUser   User         @relation(name: "FromUserRelation", fields: [fromUserId], references: [id])
  toUserId   String
  toUser     User         @relation(name: "ToUserRelation", fields: [toUserId], references: [id])
}

enum AuthType {
  Google
  Github
}

enum OnRampStatus {                                                                                                                     
  Success
  Failure
  Processing
}

enum OnRampType{
  Deposit
  Withdraw
}